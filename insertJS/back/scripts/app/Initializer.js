var LoginProxy = require("./models/LoginProxy");
var PlayerProxy = require("./models/PlayerProxy");
var TimeProxy = require("./models/TimeProxy");
var CreateProxy = require("./models/CreateProxy");
var Utils = require("./utils/Utils");
var AchievementProxy = require("./models/AchievementProxy");
var ChatProxy = require("./models/ChatProxy");
var UnionProxy = require("./models/UnionProxy");
var TaskProxy = require("./models/TaskProxy");
var ServantProxy = require("./models/ServantProxy");
var FightProxy = require("./models/FightProxy");
var JingYingProxy = require("./models/JingYingProxy");
var BagProxy = require("./models/BagProxy");
var SonProxy = require("./models/SonProxy");
var WifeProxy = require("./models/WifeProxy");
var GuideProxy = require("./models/GuideProxy");
var RankProxy = require("./models/RankProxy");
var BookProxy = require("./models/BookProxy");
var JiulouProxy = require("./models/JiulouProxy");
var LookProxy = require("./models/LookProxy");
var WelfareProxy = require("./models/WelfareProxy");
var CellProxy = require("./models/CellProxy");
var PalaceProxy = require("./models/PalaceProxy");
var JibanProxy = require("./models/JibanProxy");
var FeigeProxy = require("./models/FeigeProxy");
var DalishiProxy = require("./models/DalishiProxy");
var BossProxy = require("./models/BossProxy");
var Config = require("./Config");
var MailProxy = require("./models/MailProxy");
var AcademyProxy = require("./models/AcademyProxy");
var TaofaProxy = require("./models/TaofaProxy");
var ShopProxy = require("./models/ShopProxy");
var KitchenProxy = require("./models/KitchenProxy");
var MonthCardProxy = require("./models/MonthCardProxy");
var TreasureProxy = require("./models/TreasureProxy");
var LimitActivityProxy = require("./models/LimitActivityProxy");
var FirstRechargeProxy = require("./models/FirstRechargeProxy");
var SupportProxy = require("./models/SupportProxy");
var VoiceProxy = require("./models/VoiceProxy");
var TrunTableProxy = require("./models/TrunTableProxy");
var DailyRechargeProxy = require("./models/DailyRechargeProxy");
var PrinceRecruitProxy = require("./models/PrinceRecruitProxy");
var ClothePveProxy = require("./models/ClothePveProxy");
var PurchaseProxy = require("./models/PurchaseProxy");
var LevelGiftProxy = require("./models/LevelGiftProxy");
var SnowManProxy = require("./models/SnowManProxy");
var ContinuityRechargeProxy = require("./models/ContinuityRechargeProxy");
var FlowerProxy = require("./models/FlowerProxy");
var LuckyBrandProxy = require("./models/LuckyBrandProxy");
var GuoliProxy = require("./models/GuoliProxy");
var LanternProxy = require("./models/LanternProxy");
var JieqiProxy = require("./models/JieqiProxy");
var LuckyCarpProxy = require("./models/LuckyCarpProxy");
var TangyuanProxy = require("./models/TangyuanProxy");
var GirlsDayProxy = require("./models/GirlsDayProxy");
var ArborDayProxy = require("./models/ArborDayProxy");
var QingMingProxy = require("./models/QingMingProxy");
var SpellProxy = require("./models/SpellProxy");
var LionProxy = require("./models/LionProxy");
var ReadingDayProxy = require("./models/ReadingDayProxy");
var SingleRechargeProxy = require("./models/SingleRechargeProxy");
var LaborDayProxy = require("./models/LaborDayProxy");

var HeDengProxy = require("./models/HeDengProxy");
var LuckyTableProxy = require("./models/LuckyTableProxy");
var DragonBoatProxy = require("./models/DragonBoatProxy");
var XianYunProxy = require("./models/XianYunProxy");
var ChengHaoProxy = require("./models/ChengHaoProxy");
var BalloonProxy = require("./models/BalloonProxy");
var FourKingProxy = require("./models/FourKingProxy");
var GaodianProxy = require("./models/GaodianProxy");
var CrossProxy = require("./models/CrossProxy");
var ThirtyDaysProxy = require("./models/ThirtyDaysProxy");
var QiXiProxy = require("./models/QiXiProxy");
var ZhongYuanProxy = require("./models/ZhongYuanProxy");


window.i18n = require("i18n");



//导入proxy
exports.loginProxy = new LoginProxy.LoginProxy();
exports.playerProxy = new PlayerProxy.PlayerProxy();
exports.timeProxy = new TimeProxy.TimeProxy();
exports.createProxy = new CreateProxy.CreateProxy();
exports.achievementProxy = new AchievementProxy.AchievementProxy();
exports.chatProxy = new ChatProxy.ChatProxy();
exports.unionProxy = new UnionProxy.UnionProxy();
exports.taskProxy = new TaskProxy.TaskProxy();
exports.servantProxy = new ServantProxy.ServantProxy();
exports.fightProxy = new FightProxy.FightProxy();
exports.jingyingProxy = new JingYingProxy.JingYingProxy();
exports.bagProxy = new BagProxy.BagProxy();
exports.sonProxy = new SonProxy.SonProxy();
exports.wifeProxy = new WifeProxy.WifeProxy();
exports.guideProxy = new GuideProxy.GuideProxy();
exports.rankProxy = new RankProxy.RankProxy();
exports.bookProxy = new BookProxy.BookProxy();
exports.jiulouProxy = new JiulouProxy.JiulouProxy();
exports.lookProxy = new LookProxy.LookProxy();
exports.welfareProxy = new WelfareProxy.WelfareProxy();
exports.cellProxy = new CellProxy.CellProxy();
exports.palaceProxy = new PalaceProxy.PalaceProxy();
exports.jibanProxy = new JibanProxy.JibanProxy();
exports.feigeProxy = new FeigeProxy.FeigeProxy();
exports.dalishiProxy = new DalishiProxy.DalishiProxy();
exports.bossPorxy = new BossProxy.BossProxy();
exports.mailProxy = new MailProxy.MailProxy();
exports.academyProxy = new AcademyProxy.AcademyProxy();
exports.taofaProxy = new TaofaProxy.TaofaProxy();
exports.shopProxy = new ShopProxy.ShopProxy();
exports.kitchenProxy = new KitchenProxy.KitchenProxy();
exports.monthCardProxy = new MonthCardProxy.MonthCardProxy();
exports.treasureProxy = new TreasureProxy.TreasureProxy();
exports.limitActivityProxy = new LimitActivityProxy.LimitActivityProxy();
exports.firstRechargeProxy = new FirstRechargeProxy.FirstRechargeProxy();
exports.supportProxy = new SupportProxy.SupportProxy();
exports.voiceProxy = new VoiceProxy.VoiceProxy();
exports.trunTableProxy = new TrunTableProxy.TrunTableProxy();
exports.dailyRechargeProxy = new DailyRechargeProxy.DailyRechargeProxy();
exports.princeRecruitProxy = new PrinceRecruitProxy.PrinceRecruitProxy();
exports.clothePveProxy = new ClothePveProxy.ClothePveProxy();
exports.purchaseProxy = new PurchaseProxy.PurchaseProxy();
exports.levelGiftProxy = new LevelGiftProxy.LevelGiftProxy();
exports.snowmanProxy = new SnowManProxy.SnowManProxy();
exports.continuityRechargeProxy = new ContinuityRechargeProxy.ContinuityRechargeProxy();
exports.flowerProxy = new FlowerProxy.FlowerProxy();
exports.luckyBrandProxy = new LuckyBrandProxy.LuckyBrandProxy();
exports.guoliPorxy = new GuoliProxy.GuoliProxy();
exports.lanternProxy = new LanternProxy.LanternProxy();
exports.jieqiProxy = new JieqiProxy.JieqiProxy();
exports.luckyCarpProxy = new LuckyCarpProxy.LuckyCarpProxy();
exports.tangyuanProxy = new TangyuanProxy.TangyuanProxy();
exports.girlsDayProxy = new GirlsDayProxy.GirlsDayProxy();
exports.arborDayProxy = new ArborDayProxy.ArborDayProxy();
exports.qingMingProxy = new QingMingProxy.QingMingProxy();
exports.spellProxy = new SpellProxy.SpellProxy();
exports.lionProxy = new LionProxy.LionProxy();
exports.readingDayProxy = new ReadingDayProxy.ReadingDayProxy();
exports.singleRechargeProxy = new SingleRechargeProxy.SingleRechargeProxy();
exports.laborDayProxy = new LaborDayProxy.LaborDayProxy();


exports.hedengProxy = new HeDengProxy.HeDengProxy();
exports.luckyTableProxy = new LuckyTableProxy.LuckyTableProxy();
exports.dragonBoatProxy = new DragonBoatProxy.DragonBoatProxy();
exports.xianyunProxy = new XianYunProxy.XianYunProxy();
exports.chengHaoProxy = new ChengHaoProxy.ChengHaoProxy();
exports.balloonProxy = new BalloonProxy.BalloonProxy();
exports.fourKingProxy = new FourKingProxy.FourKingProxy();
exports.gaodianProxy = new GaodianProxy.GaodianProxy();
exports.crossProxy = new CrossProxy.CrossProxy();
exports.thirtyDaysProxy = new ThirtyDaysProxy.ThirtyDaysProxy();
exports.qixiProxy = new QiXiProxy.QiXiProxy();
exports.zhongyuanProxy = new ZhongYuanProxy.ZhongYuanProxy();

var Initializer = (function () {
    function Initializer() {
        this.initialized = false;
        
    }
    Initializer.prototype.getUrl = function () {
        return Config.Config.url + "?sevid=" + Config.Config.serId + "&ver=" + Config.Config.version + "&uid=" +
            Config.Config.uid + "&token=" + Config.Config.token + "&platform=" + Config.Config.pf + "&lang=" + Config.Config.lang;
    };
    Initializer.prototype.init = function () {
       
        Config.Config.DEBUG = (!cc.sys.isMobile) && Config.Config.DEBUG;
        JsonHttp.setDebug(Config.Config.DEBUG);
        JsonHttp.setRSN(Config.Config.isRSN);
        JsonHttp.setGetUrl(this.getUrl);
        JsonHttp.setSecondHandler(Utils.timeUtil.getCurSceond.bind(Utils.timeUtil));
        Utils.timeUtil.init(9, Math.floor(cc.sys.now() / 1000));
        facade.setDebug(Config.Config.DEBUG);
        if (this.initialized)
            return;
        this.initialized = true;
        //注册所有Proxy组件
        facade.addBean(exports.loginProxy);
        facade.addBean(exports.playerProxy);
        facade.addBean(exports.timeProxy);
        facade.addBean(exports.createProxy);
        facade.addBean(exports.chatProxy);
        facade.addBean(exports.achievementProxy);
        facade.addBean(exports.unionProxy);
        facade.addBean(exports.taskProxy);
        facade.addBean(exports.servantProxy);
        facade.addBean(exports.fightProxy);
        facade.addBean(exports.jingyingProxy);
        facade.addBean(exports.bagProxy);
        facade.addBean(exports.sonProxy);
        facade.addBean(exports.wifeProxy);
        facade.addBean(exports.guideProxy);
        facade.addBean(exports.rankProxy);
        facade.addBean(exports.bookProxy);
        facade.addBean(exports.jiulouProxy);
        facade.addBean(exports.lookProxy);
        facade.addBean(exports.welfareProxy);
        facade.addBean(exports.cellProxy);
        facade.addBean(exports.palaceProxy);
        facade.addBean(exports.jibanProxy);
        facade.addBean(exports.feigeProxy);
        facade.addBean(exports.dalishiProxy);
        facade.addBean(exports.bossPorxy);
        facade.addBean(exports.mailProxy);
        facade.addBean(exports.academyProxy);
        facade.addBean(exports.taofaProxy);
        facade.addBean(exports.shopProxy);
        facade.addBean(exports.kitchenProxy);
        facade.addBean(exports.monthCardProxy);
        facade.addBean(exports.treasureProxy);
        facade.addBean(exports.limitActivityProxy);
        facade.addBean(exports.firstRechargeProxy);
        facade.addBean(exports.supportProxy);
        facade.addBean(exports.voiceProxy);
        facade.addBean(exports.trunTableProxy);
        facade.addBean(exports.dailyRechargeProxy);
        facade.addBean(exports.princeRecruitProxy);
        facade.addBean(exports.clothePveProxy);
        facade.addBean(exports.purchaseProxy);
        facade.addBean(exports.levelGiftProxy);
        facade.addBean(exports.snowmanProxy);
        facade.addBean(exports.hedengProxy);
        facade.addBean(exports.continuityRechargeProxy);
        facade.addBean(exports.flowerProxy);
        facade.addBean(exports.luckyBrandProxy);
        facade.addBean(exports.guoliPorxy);
        facade.addBean(exports.lanternProxy);
        facade.addBean(exports.jieqiProxy);
        facade.addBean(exports.luckyCarpProxy);
        facade.addBean(exports.tangyuanProxy);
        facade.addBean(exports.girlsDayProxy);
        facade.addBean(exports.arborDayProxy);
        facade.addBean(exports.qingMingProxy);
        facade.addBean(exports.spellProxy);
        facade.addBean(exports.lionProxy);
        facade.addBean(exports.readingDayProxy);
        facade.addBean(exports.singleRechargeProxy);
        facade.addBean(exports.laborDayProxy);
        facade.addBean(exports.luckyTableProxy);
        facade.addBean(exports.dragonBoatProxy);
        facade.addBean(exports.xianyunProxy);
        facade.addBean(exports.chengHaoProxy);
        facade.addBean(exports.balloonProxy);
        facade.addBean(exports.fourKingProxy);
        facade.addBean(exports.gaodianProxy);
        facade.addBean(exports.crossProxy);
        facade.addBean(exports.thirtyDaysProxy);
        facade.addBean(exports.qixiProxy);
        facade.addBean(exports.zhongyuanProxy);
        //初始化
        facade.eachBean("ctor");
    };
    return Initializer;
})();
exports.Initializer = Initializer;